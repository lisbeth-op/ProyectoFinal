@page "/R_MateriaPrima"

@inject MateriaPrimaBLL materiaPrimaBLL

@inject NotificationService notificationService

<EditForm Model="materia" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header">
            <h3>Registro de Materia Prima</h3>
        </div>

        <div class="card-body">
            <div class="form-group row">
                <div class="col-sm-3">
                    <label for="txtId" class="form-label">Id:</label>
                    <input type="number" id="txtId" class="form-control" @bind-value="materia.MateriaPrimaId">
                </div>

                <div class="col-sm-9">
                    <button type="button" class="btn btn-primary" @onclick="Buscar">Buscar</button>
                </div>
            </div>

             <div class="col-sm-6">
                <label for="txtConcepto" class="form-label">Nombre:</label>
                <input type="text" id="txtConcepto" class="form-control" @bind-value="materia.Nombre">
                <ValidationMessage For="@(() => materia.Nombre)" />
            </div>
         
            <div class="col-sm-6">
                <label for="txtConcepto" class="form-label">Descripción:</label>
                <input type="text" id="txtConcepto" class="form-control" @bind-value="materia.Descripcion">
                <ValidationMessage For="@(() => materia.Descripcion)" />
            </div>
         

            <div class="col-sm-6">
                <label for="txtConcepto" class="form-label">Precio:</label>
                <input type="text" id="txtConcepto" class="form-control" @bind-value="materia.Precio">
                <ValidationMessage For="@(() => materia.Precio)" />
            </div>
            <div class="col-sm-6">
                <label for="txtConcepto" class="form-label">Existencia:</label>
                <input type="text" id="txtConcepto" class="form-control" @bind-value="materia.Existencia">
                <ValidationMessage For="@(() => materia.Existencia)" />
            </div>



     

                <div class="card-footer text-centerc">
                    <button type="button" class="btn btn-primary mr-2" @onclick="Nuevo"> Nuevo </button>
                    <button type="submit" name="BtnGuardar" id="BtnGuardar" class="btn btn-success mr-2"> Guardar </button>
                    <button type="button" class="btn btn-danger mr-2" @onclick="Eliminar">
                        Eliminar
                    </button>
                </div>
            </div>
     </div
</EditForm>






@code {




    [Parameter]
    public int MateriaPrimaId { get; set; }
    public MateriasPrimas materia { get; set; } = new MateriasPrimas();

    protected override void OnInitialized()
    {
        if (MateriaPrimaId > 0)
        {

            this.materia.MateriaPrimaId = MateriaPrimaId;
            this.Buscar();
        }
    }

    void Buscar()
    {

        var ProductoEncontrado = materiaPrimaBLL.Buscar(materia.MateriaPrimaId);
        if (ProductoEncontrado != null)
            this.materia = ProductoEncontrado;
            else
        {
            ShowNotification(
                   new NotificationMessage
                       {
                           Severity = NotificationSeverity.Info,
                           Summary = "ID no existe"
                       });

        }


        }
        
    
    void Nuevo()
    {
        this.materia = new MateriasPrimas();
    }


    void Guardar()
    {
        if (materiaPrimaBLL.Guardar(this.materia))

            Nuevo();
             ShowNotification(
               new NotificationMessage
                   {
                       Severity = NotificationSeverity.Success,
                       Summary = "Guardado correctamente"
                   });
    }

    void Eliminar()
    {
        if (materiaPrimaBLL.Eliminar(this.materia))
        {   
            Nuevo();
             ShowNotification(
               new NotificationMessage
                   {
                       Severity = NotificationSeverity.Success,
                       Summary = "Eliminado correctamente"
                   });
        }
           
    }
     void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);
    }




}