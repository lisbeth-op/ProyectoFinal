@page "/c_orden"

@inject OrdenesProduccionBLL OrdenBLL;


<EditForm Model="lista">
    <DataAnnotationsValidator />

    <div class="container-fluid" style="background-color:wheat">
        <div class="card bg-light">
            <div class="card-header" style="background-color:lightyellow">
                <h3 class="text-primary text-center">Consulta Orden de Producción</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-4">
                        <label>Filtrar por:</label>
                        <select class="form-select" @bind="Filtro">
                            <option value="">-- Seleccione una opción --</option>
                            <option value="1">Id Orden</option>
                            <option value="2">Fecha</option>
                            <option value="3">Costo Total</option>
                        </select>
                    </div>
                    <div class="col-4">
                        <label>Criterio:</label>
                        <input type="text" class="form-control" @bind="Criterio" />
                    </div>
                </div>

                    <div class="col-4">
                        <label>&nbsp;</label>
                        <button class="btn btn-primary form-control" @onclick="@Buscar">Buscar</button>
                    </div>
                </div>
                <br />
                <table class="table table-hover table-bordered" style="background-color: #f4f4de">
                    <thead class="table-primary">
                        <tr>
                            <th>Id Orden </th>
                            <th>Fecha</th>
                            <th>Costo Total</th>
                            <th>Ver Registro</th>

                        </tr>
                    </thead>
                    <tbody>
                        @if (lista != null && lista.Any())
                        {
                            @foreach (var N_product in lista)
                            {
                                <tr>
                                    <td>@N_product.OrdenDeProduccionId</td>
                                    
                                    <td>@N_product.Fecha.ToShortDateString()</td>
                                    <td>@N_product.CostoTotal</td>

                                    <td><a href="/R_OrdenDeProduccion/@N_product.OrdenDeProduccionId">Ver</a></td>
                                </tr>


                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4">No se encontraron resultados</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    
</EditForm>
@code {
    public string Filtro { get; set; } = "";
    public string Criterio { get; set; } = "";
    public List<OrdenDeProducciones> lista { get; set; } = new List<OrdenDeProducciones>();
    public Productos? productos { get; set; }
    public DateOnly Fecha1 { get; set; } = new DateOnly(2023, 04, 10);
    public DateOnly Fecha2 { get; set; } = DateOnly.FromDateTime(DateTime.Now);
    protected override void OnInitialized()
    {
        lista = OrdenBLL.GetList(o => true);
    }


    public void Buscar()
    {
        switch (Filtro)
        {

            case "1":
                lista = OrdenBLL.GetList(o => o.OrdenDeProduccionId.Equals(Convert.ToInt32(Criterio)));
                break;

            case "2":
                lista = OrdenBLL.GetList(o => o.Fecha.ToString().Contains(Criterio));
                break;

            case "3":
                lista = OrdenBLL.GetList(o => o.CostoTotal.ToString().Contains(Criterio));
                break;
        }


    }



}